/**
 * SCRIPT SIMPLES PARA EXECUTAR NO CONSOLE DO NAVEGADOR
 * 
 * INSTRU√á√ïES:
 * 1. Abra qualquer p√°gina do seu site que tenha Firebase carregado
 * 2. Pressione F12 para abrir o console do navegador
 * 3. Cole este c√≥digo completo no console
 * 4. Pressione Enter para executar
 */

(async function() {
    console.log('üöÄ Iniciando script de inicializa√ß√£o do banco de dados...');
    
    // Verificar se Firebase est√° dispon√≠vel
    if (typeof firebase === 'undefined') {
        console.error('‚ùå Firebase n√£o est√° carregado! Certifique-se de estar em uma p√°gina do site.');
        return;
    }
    
    if (!firebase.firestore) {
        console.error('‚ùå Firestore n√£o est√° dispon√≠vel!');
        return;
    }
    
    console.log('‚úÖ Firebase detectado, prosseguindo...');
    
    // Dados para inicializar
    const initialData = {
        pricing: {
            currency: "BRL",
            base: {
                Cao: {
                    Pequeno: { Banho: 45, TosaHigienica: 55, TosaTotal: 90, BanhoTosa: 120 },
                    Medio: { Banho: 60, TosaHigienica: 70, TosaTotal: 110, BanhoTosa: 145 },
                    Grande: { Banho: 80, TosaHigienica: 95, TosaTotal: 140, BanhoTosa: 185 },
                    Gigante: { Banho: 100, TosaHigienica: 120, TosaTotal: 180, BanhoTosa: 240 }
                },
                Gato: {
                    Unico: { Banho: 70, TosaHigienica: 85, TosaTotal: 120, BanhoTosa: 150 }
                }
            },
            addons: {
                corteUnhas: {
                    label: "Corte de Unhas",
                    prices: { Cao: 15, Gato: 20 }
                },
                limpezaOuvidos: {
                    label: "Limpeza de Ouvidos",
                    prices: { Cao: 10, Gato: 15 }
                },
                hidratacao: {
                    label: "Hidrata√ß√£o",
                    percentOfBase: 0.15,
                    min: 15
                },
                perfume: {
                    label: "Perfumaria",
                    prices: { Cao: 5, Gato: 5 }
                },
                desembolo: {
                    label: "Desembolo de n√≥s",
                    tieredByCoat: { Curta: 15, Media: 25, Longa: 40 }
                }
            },
            coatMultipliers: { Curta: 1.0, Media: 1.05, Longa: 1.10 }
        },
        lastUpdated: new Date().toISOString(),
        updatedBy: "console_script"
    };
    
    try {
        const db = firebase.firestore();
        
        // Verificar se j√° existe
        console.log('üîç Verificando se documento j√° existe...');
        const docRef = db.collection('settings').doc('servicePricing');
        const existingDoc = await docRef.get();
        
        if (existingDoc.exists()) {
            console.log('‚ö†Ô∏è Documento j√° existe! Dados atuais:');
            console.log(existingDoc.data());
            
            const overwrite = confirm('O documento j√° existe. Deseja sobrescrever? (OK = Sim, Cancelar = N√£o)');
            if (!overwrite) {
                console.log('‚ùå Opera√ß√£o cancelada pelo usu√°rio');
                return;
            }
        }
        
        // Criar/atualizar documento
        console.log('üíæ Salvando dados no Firestore...');
        await docRef.set(initialData);
        
        // Verificar se foi salvo
        console.log('üîÑ Verificando se foi salvo corretamente...');
        const verification = await docRef.get();
        
        if (verification.exists()) {
            console.log('‚úÖ SUCESSO! Estrutura criada/atualizada no Firestore!');
            console.log('üìä Dados salvos:', verification.data());
            console.log('üéâ Agora voc√™ pode usar o sistema de pre√ßos din√¢mico!');
        } else {
            console.error('‚ùå Erro: Documento n√£o foi salvo corretamente');
        }
        
    } catch (error) {
        console.error('‚ùå Erro durante a opera√ß√£o:', error);
        console.log('üí° Dica: Verifique se voc√™ tem permiss√µes para escrever no Firestore');
    }
})();

// Fun√ß√µes auxiliares dispon√≠veis ap√≥s executar o script
window.checkServicePricing = async function() {
    try {
        const doc = await firebase.firestore().collection('settings').doc('servicePricing').get();
        if (doc.exists()) {
            console.log('üìä Dados atuais no Firestore:');
            console.log(doc.data());
        } else {
            console.log('‚ùå Nenhum documento encontrado');
        }
    } catch (error) {
        console.error('‚ùå Erro ao verificar:', error);
    }
};

window.deleteServicePricing = async function() {
    if (confirm('ATEN√á√ÉO: Isso ir√° deletar TODA a estrutura de pre√ßos! Tem certeza?')) {
        try {
            await firebase.firestore().collection('settings').doc('servicePricing').delete();
            console.log('üóëÔ∏è Estrutura deletada com sucesso');
        } catch (error) {
            console.error('‚ùå Erro ao deletar:', error);
        }
    }
};

console.log('üí° Script carregado! Fun√ß√µes dispon√≠veis:');
console.log('   - checkServicePricing() - Verificar dados atuais');
console.log('   - deleteServicePricing() - Deletar estrutura (cuidado!)');
